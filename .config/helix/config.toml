theme = "amberwood"

[editor]
cursorline = true
auto-pairs = false
completion-replace = false
bufferline = "multiple"
color-modes = true

[editor.cursor-shape]
insert = "bar"
normal = "block"
select = "underline"

[editor.lsp]
# display-inlay-hints = true
# copilot-auto = false

[editor.file-picker]
hidden = false

[editor.whitespace.render]
space = "all"
tab = "all"
newline = "all"

[editor.statusline]
left = ["mode", "spinner",  "file-name", "read-only-indicator", "file-modification-indicator"]
right = ["diagnostics", "file-type", "position"]
center = ["version-control"]

[keys.normal."["]
n = "goto_prev_change"
N = "goto_first_change"
 
[keys.normal."]"]
n = "goto_next_change"
N = "goto_last_change"

[keys.normal." "]
"=" = "format_selections"
F = "file_picker_in_current_buffer_directory"
R = ":reload-all"
c = ":buffer-close"
C = ":buffer-close-all"
#D = ["vsplit_new", ":set-language diff", ":insert-output git diff --cached", "rotate_view_reverse"]
"!" = [":insert-output env"]

[keys.normal]
# Some nice Helix stuff
C-h = "select_prev_sibling"
C-j = "shrink_selection"
C-k = "expand_selection"
C-l = "select_next_sibling"

# "C-y" = "toggle_copilot_auto"

# Muscle memory
"{" = ["goto_prev_paragraph", "collapse_selection"]
"}" = ["goto_next_paragraph", "collapse_selection"]
0 = "goto_line_start"
"$" = "goto_line_end"
"^" = "goto_first_nonwhitespace"
G = "goto_file_end"
"C-%" = "match_brackets"
V = ["select_mode", "extend_to_line_bounds"]
# C = ["extend_to_line_end", "yank_main_selection_to_clipboard", "delete_selection", "insert_mode"]
D = ["extend_to_line_end", "yank_main_selection_to_clipboard", "delete_selection"]
S = "surround_add" # Would be nice to be able to do something after this but it isn't chainable

# Would be nice to add ya and yi, but the surround commands can't be chained
Y = ["yank_main_selection_to_clipboard"]

# Uncanny valley stuff, this makes w and b behave as they do Vim
# w = ["move_next_word_start", "move_char_right", "collapse_selection"]
# W = ["move_next_long_word_start", "move_char_right", "collapse_selection"]
# e = ["move_next_word_end", "collapse_selection"]
# E = ["move_next_long_word_end", "collapse_selection"]
# b = ["move_prev_word_start", "collapse_selection"]
# B = ["move_prev_long_word_start", "collapse_selection"]

# If you want to keep the selection-while-moving behaviour of Helix, this two lines will help a lot,
# especially if you find having text remain selected while you have switched to insert or append mode
#
# There is no real difference if you have overridden the commands bound to 'w', 'e' and 'b' like above
# But if you really want to get familiar with the Helix way of selecting-while-moving, comment the
# bindings for 'w', 'e', and 'b' out and leave the bindings for 'i' and 'a' active below. A world of difference!
# i = ["insert_mode", "collapse_selection"]
# a = ["append_mode", "collapse_selection"]

# Undoing the 'd' + motion commands restores the selection which is annoying
u = ["undo", "collapse_selection"]

# Escape the madness! No more fighting with the cursor! Or with multiple cursors!
esc = ["collapse_selection", "keep_primary_selection"]

# Search for word under cursor
"*" = ["move_char_right", "move_prev_word_start", "move_next_word_end", "search_selection", "search_next"]
"#" = ["move_char_right", "move_prev_word_start", "move_next_word_end", "search_selection", "search_prev"]

[keys.insert]
# Escape the madness! No more fighting with the cursor! Or with multiple cursors!
esc = ["collapse_selection", "normal_mode"]

# Copilot
# "C-e" = "show_or_next_copilot_completion"
# "C-a" = "hide_or_prev_copilot_completion"
# "C-y" = "apply_copilot_completion"


[keys.select]
# Muscle memory
"{" = ["extend_to_line_bounds", "goto_prev_paragraph"]
"}" = ["extend_to_line_bounds", "goto_next_paragraph"]
0 = "goto_line_start"
"$" = "goto_line_end"
"^" = "goto_first_nonwhitespace"
G = "goto_file_end"
D = ["extend_to_line_bounds", "delete_selection", "normal_mode"]
#C = ["goto_line_start", "extend_to_line_bounds", "change_selection"]
"C-%" = "match_brackets"
S = "surround_add" # Basically 99% of what I use vim-surround for
u = ["switch_to_lowercase", "collapse_selection", "normal_mode"]
U = ["switch_to_uppercase", "collapse_selection", "normal_mode"]

# Visual-mode specific muscle memory
C-i = "select_textobject_inner"
C-a = "select_textobject_around"

# Some extra binds to allow us to insert/append in select mode because it's nice with multiple cursors
#tab = ["insert_mode", "collapse_selection"] # tab is read by most terminal editors as "C-i"
#C-a = ["append_mode", "collapse_selection"]

# Clipboards over registers ye ye
# d = ["yank_main_selection_to_clipboard", "delete_selection"]
# x = ["yank_main_selection_to_clipboard", "delete_selection"]
# y = ["yank_main_selection_to_clipboard", "normal_mode", "flip_selections", "collapse_selection"]
# Y = ["extend_to_line_bounds", "yank_main_selection_to_clipboard", "goto_line_start", "collapse_selection", "normal_mode"]
# p = "replace_selections_with_clipboard" # No life without this
# P = "paste_clipboard_before"

# Escape the madness! No more fighting with the cursor! Or with multiple cursors!
esc = ["collapse_selection", "keep_primary_selection", "normal_mode"]
